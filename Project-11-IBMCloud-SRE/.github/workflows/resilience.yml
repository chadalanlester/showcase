name: Resilience Checks

on:
  workflow_dispatch: {}
  push:
    paths:
      - "project-4-resilient-app/**"
      - ".github/workflows/resilience.yml"

permissions:
  contents: read
  packages: write

env:
  IMAGE: ghcr.io/${{ github.repository }}/project-4-resilient-app:latest
  APP_PATH: project-4-resilient-app

jobs:
  resilience:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---- Build & push image to GHCR ----
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & push (linux/amd64)
        uses: docker/build-push-action@v5
        with:
          context: ./project-4-resilient-app
          platforms: linux/amd64
          push: true
          tags: ${{ env.IMAGE }}

      # ---- Python deps for tests ----
      - name: Set up Python
        uses: actions/setup-python@v5
        with: { python-version: '3.11' }

      - name: Install script deps
        run: pip install -r $APP_PATH/scripts/requirements.txt

      # ---- Restore kubeconfig only if provided ----
      - name: Restore kubeconfig (optional)
        env:
          KUBECONFIG_B64: ${{ secrets.KUBECONFIG_B64 }}
        run: |
          if [ -n "${KUBECONFIG_B64}" ]; then
            mkdir -p "$HOME/.kube"
            echo "${KUBECONFIG_B64}" | base64 -d > "$HOME/.kube/config"
            echo "KUBECONFIG=$HOME/.kube/config" >> "$GITHUB_ENV"
            echo "kubeconfig restored"
          else
            echo "KUBECONFIG_B64 not set; skipping chaos step."
          fi

      # ---- Chaos kill only if kubeconfig exists ----
      - name: Chaos kill one pod (optional)
        run: |
          if [ -f "$HOME/.kube/config" ]; then
            python $APP_PATH/scripts/chaos_kill_pods.py resilient trivia-api
          else
            echo "No kubeconfig; skipping chaos."
          fi

      # ---- Load gen against your LB URL (TRIVIA_URL secret) ----
      - name: Load for 2 minutes
        env:
          CLIENTS: '120'
          DURATION: '120'
          TRIVIA_URL: ${{ secrets.TRIVIA_URL }}
        run: |
          if [ -n "${TRIVIA_URL}" ]; then
            python $APP_PATH/scripts/load_gen.py "${TRIVIA_URL}/trivia"
          else
            echo "TRIVIA_URL not set; skipping load."
          fi

      # ---- Optional SLO check (PROM_URL secret) ----
      - name: Check SLO
        env:
          PROM_URL: ${{ secrets.PROM_URL }}
        run: |
          if [ -n "${PROM_URL}" ]; then
            python $APP_PATH/scripts/check_slo.py "${PROM_URL}"
          else
            echo "PROM_URL not set; skipping SLO check."
          fi
